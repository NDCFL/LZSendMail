<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fz.dao.EmailDAO">
    <resultMap id="emailMap" type="emailVo"></resultMap>
    <sql id="where_all">
        <where>
            <if test="title != null and title !='' " >
                and (
                    LOWER(title) like LOWER(CONCAT('%${title}%')) or
                    LOWER(content) like LOWER(CONCAT('%${title}%')) or
                    LOWER(srcsend) like LOWER(CONCAT('%${title}%')) or
                    LOWER(endsend) like LOWER(CONCAT('%${title}%'))
                )
            </if>
            <if test="status != null and status !='' " >
                and status in (${status})
            </if>
        </where>
    </sql>
    <select id="queryById" resultMap="emailMap" parameterType="long">
        select * from t_mailhistory where id = #{id}
    </select>
    <delete id="delete" parameterType="long">
        delete from t_mailhistory where id = #{id}
    </delete>
    <select id="pagelist" resultMap="emailMap" statementType="STATEMENT">
        select * from t_mailhistory  <include refid="where_all"/> limit ${pageNo},${pageSize}
    </select>
    <select id="listAll" resultMap="emailMap" statementType="STATEMENT">
        select * from t_mailhistory  <include refid="where_all"/>
    </select>
    <select id="count" resultType="int">
        select count(*) from t_mailhistory  <include refid="where_all"/>
    </select>
    <insert id="add" parameterType="emailVo">
        insert into t_mailhistory (srcsend, endsend, title, content, accessoryPath, createTime, emailCode, status, userId) values ( #{srcsend}, #{endsend}, #{title}, #{content}, #{accessoryPath}, #{createTime}, #{emailcode}, #{status}, #{userid})
    </insert>
    <update id="update">
        update t_mailhistory set companyName=#{companyName},leader=#{leader},emailAcc=#{emailAcc} where id = #{id}
    </update>
    <update id="updateStatus">
        update t_mailhistory set status=#{status} where id = #{id}
    </update>
</mapper>