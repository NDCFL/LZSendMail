<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fz.dao.EmailDAO">
    <resultMap id="emailMap" type="emailVo"></resultMap>
    <sql id="where_all">
            <if test="pageQuery.title != null and pageQuery.title !='' " >
                and (
                    title like '%${pageQuery.title}%' or
                    content like '%${pageQuery.title}%' or
                    srcsend like '%${pageQuery.title}%' or
                    endsend like '%${pageQuery.title}%'
                )
            </if>
            <if test="pageQuery.status != null and pageQuery.status !='' " >
                and status in (${pageQuery.status})
            </if>
    </sql>
    <select id="queryById" resultMap="emailMap" parameterType="long">
        select * from t_mailhistory where id = #{id}
    </select>
    <delete id="delete" parameterType="long">
        delete from t_mailhistory where id = #{id}
    </delete>
    <select id="pagelists" resultMap="emailMap" statementType="STATEMENT">
       select top(${pageQuery.pageSize}) * from t_mailhistory where id not in(select top(${pageQuery.pageNo}) id from t_mailhistory) and userId=${userId}  <include refid="where_all"/> order by createTime DESC
    </select>
    <select id="listAll" resultMap="emailMap" statementType="STATEMENT">
        select * from t_mailhistory where 1=1  <include refid="where_all"/> order by createTime DESC
    </select>
    <select id="counts" resultType="int" statementType="STATEMENT">
        select count(*) from t_mailhistory where 1=1 and userId=${userId}  <include refid="where_all"/>
    </select>
    <insert id="add" parameterType="emailVo">
        insert into t_mailhistory (srcsend, endsend, title, content, accessoryPath, createTime, emailCode, status, userId,csend) values ( #{srcsend}, #{endsend}, #{title}, CONVERT(VARCHAR ,#{content}), CONVERT(VARCHAR ,#{accessoryPath}), #{createTime}, #{emailcode}, #{status}, #{userid},#{csend})
    </insert>
    <update id="update">
        update t_mailhistory set companyName=#{companyName},leader=#{leader},emailAcc=#{emailAcc} where id = #{id}
    </update>
    <update id="updateStatus">
        update t_mailhistory set status=#{status} where id = #{id}
    </update>
    <insert id="batchAdd" parameterType="java.util.List">
        insert into t_mailhistory (srcsend, endsend, title, content, accessoryPath, createTime, emailcode, status, userId,csend)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.srcsend}, #{item.endsend}, #{item.title}, #{item.content},
            #{item.accessoryPath},#{item.createTime},#{item.emailcode},
            #{item.status},#{item.userid},#{csend}
            )
        </foreach>
    </insert>
</mapper>